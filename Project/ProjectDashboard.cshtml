@page
@model Lab2.Pages.Project.ProjectDashboardModel
@{
	ViewData["Title"] = "My Project Dashboard";
}

<style>
	.table-responsive {
	overflow-x: auto;
	}

	table thead th {
	background-color: #450084;
	color: white;
	border: none;
	padding: 0.75rem 1rem;
	text-transform: uppercase;
	letter-spacing: 0.5px;
	font-size: 0.95rem;
	}

	table td {
	padding: 0.75rem 1rem;
	vertical-align: middle;
	border-top: 1px solid #ddd;
	}

	table tbody tr:hover {
	background-color: #f2e6ff;
	}

	.btn-outline-primary {
	color: #450084;
	border: 1.5px solid #450084;
	border-radius: 0.5rem;
	transition: all 0.2s ease-in-out;
	font-weight: 500;
	}

	.btn-outline-primary:hover {
	background-color: #450084;
	color: white;
	border-color: #450084;
	}

	.btn-outline-success {
	color: #450084;
	border-color: #450084;
	}

	.btn-outline-success:hover {
	background-color: #450084;
	color: white;
	border-color: #450084;
	}

	.btn-outline-dark:hover {
	background-color: #450084;
	color: white;
	border-color: #450084;
	}

	.btn-outline-dark {
	color: #450084;
	border-color: #450084;
	}

	.btn-outline-dark:hover {
	background-color: #450084;
	color: white;
	border-color: #450084;
	}
</style>

<h3 class="mb-4">My Projects</h3>

<div class="container">
	<div class="row justify-content-between align-items-start g-4">
		<div class="col-md-6 col-lg-5">
			<div class="card shadow-sm border-0">
				<div class="card-header bg-white fw-semibold border-bottom">Project Status Overview</div>
				<div class="card-body text-center">
					<canvas id="statusChart" class="w-100" height="380" style="max-width: 100%; height: auto;"></canvas>
				</div>
			</div>
		</div>

		<div class="col-md-6 col-lg-7">
			<div class="card shadow-sm border-0">
				<div class="card-header bg-white fw-semibold border-bottom">Upcoming Tasks by Deadline</div>
				<div class="card-body p-3" style="max-height: 400px; overflow-y: auto;">
					@if (Model.UserTasks != null && Model.UserTasks.Count > 0)
					{
						<ul class="list-group">
							@foreach (var task in Model.UserTasks.OrderBy(t => t.Due_Date))
							{
								var isLate = task.Due_Date < DateTime.Today && !task.Status.ToLower().Contains("complete");
								var isSoon = task.Due_Date <= DateTime.Today.AddDays(7) && !task.Status.ToLower().Contains("complete");
								var isComplete = task.Status.ToLower().Contains("complete");

								var bgColor = isComplete ? "bg-light text-muted" :
								isLate ? "bg-danger text-white" :
								isSoon ? "bg-warning text-dark" : "";
								var icon = isComplete ? "✅" : isLate ? "⚠️" : "📌";

								<li class="list-group-item d-flex flex-column align-items-start @bgColor mb-2 rounded">
									<div class="d-flex w-100 justify-content-between align-items-center">
										<span class="fw-bold">@icon @task.Title</span>
										<span class="badge bg-secondary">@task.Due_Date?.ToString("MMM d")</span>
									</div>
									<small class="text-muted">
										Project: @task.ProjectTitle | Priority: @task.Priority | Status: @task.Status
									</small>
								</li>
							}
						</ul>
					}
					else
					{
						<p class="text-muted">No tasks to display.</p>
					}
				</div>
			</div>
		</div>
	</div>
</div>

		<div class="col">
			<table class="table table-bordered table-responsive table-hover">
				<thead>
					<tr>
						<th>Title:</th>
						<th>Status:</th>
						<th>Due Date:</th>
						<th>Details:</th>
					</tr>
				</thead>
				<tbody>
					@{
						foreach (var project in Model.Projects)
						{
							var statusClass = project.Status == "Active" ? "text-success" :
							project.Status == "Archived" ? "text-danger" : "";
							<tr>
								<td>@project.Title</td>
								<td class="@statusClass fw-bold text-uppercase">@project.Status</td>
								<td>@project.Due_Date</td>
								<td>
									<a asp-page="/Project/ProjectDetails"
										asp-route-projectid="@project.Project_ID"
										class="btn btn-sm btn-outline-primary">
										View Details
									</a>
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
			<a asp-page="Index" class="btn btn-outline-success">Back to Projects</a>
		</div>
	</div>
</div>

<!--used chat to figure out the best way to get a chart to display-->
@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<script>
		const ctx = document.getElementById('statusChart').getContext('2d');
		const labels = @Html.Raw(Json.Serialize(Model.ProjectStatusCounts.Keys));
		const data = @Html.Raw(Json.Serialize(Model.ProjectStatusCounts.Values));
		const statusChart = new Chart(ctx, {
			type: 'pie',
			data: {
				labels: labels,
				datasets: [{
					data: data,
					backgroundColor: ['#6a0dad', '#e63946'],
					borderWidth: 1
				}]
			},
			options: {
				responsive: true,
				plugins: {
					legend: {
						position: 'right'
					}
				}
			}
		});
	</script>
}


